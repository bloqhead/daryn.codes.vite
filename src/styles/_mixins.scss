@use "sass:color";
@use "sass:math";
//
// Mixins
//

@use './variables' as v;

@mixin list-reset {
  padding: 0;
  margin: 0;
  list-style: none;
}

@mixin logoColor($page: null, $color: var(--color-pink)) {
  body.#{$page} & {

    .path {
      stroke: $color;
    }

    .wheel {
      fill: $color;
    }
  }
}

@mixin nther(
  $n: null,
  $color: null,
  $bg: null
) {
  $darken: 30%;
  &:nth-of-type(#{$n}) a {
    color: $color;

    &:after {
      background: color.adjust($bg, $lightness: -$darken);
    }

    &:before {
      background: $bg;
      box-shadow: 5px 5px 0 0 color.adjust($bg, $lightness: -$darken);
    }
  }
}

@mixin retroTitle {
  overflow: hidden;
  display: inline-block;
  margin: 0;
  padding: 1em 1em 2.5em 1em;
  font-size: 2rem;
  line-height: 2;
  letter-spacing: 0;
  color: var(--color-dark);
  transform: translateY(0.6em) skewY(-3deg);

  @content;

  > span {
    background: var(--color-pink);
    transition: $work-transition;
    padding: 0.25em 0;
    box-shadow:
      0.5em 0 0 var(--color-pink),
      -0.5em 0 0 var(--color-pink),
      0.75em 0.25em 0 var(--color-teal);
  }

  &:after {
    display: none;
  }
}

@mixin textPanel {
  background-color: rgba(v.$mid, 0.85);
  font-size: 1.5em;
  padding: var(--global-component-padding);
  border-radius: 2rem;
  text-wrap: balance;

  p {
    margin: 0;
    padding: 0;
  }
}

@mixin panel(
  $color: var(--color-pink),
  $background: var(--panel-bg),
  $border-radius: var(--radius),
) {
  position: relative;
  margin: 3em auto 1em auto;
  padding: 0;
  background: $background;
  border-radius: $border-radius;

  &:before, &:after {
    position: absolute;
    content: "";
    display: block;
    width: 100%;
    height: 5px;
    background: linear-gradient(to right, transparent 0%, $color 50%, rgba($color, 0) 100%);
  }

  &:before {
    top: 0; left: 0;
    border-radius: $border-radius $border-radius 0 0;
  }

  &:after {
    bottom: 0; left: 0;
    border-radius: 0 0 $border-radius $border-radius;
  }
}

@mixin cleartext {
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
}

@mixin placeholder {
  &::-webkit-input-placeholder,
  &:-moz-placeholder,
  &::-moz-placeholder,
  &:-ms-input-placeholder {
    @content;
  }
}

//
// Fluid type
// https://css-tricks.com/snippets/css/fluid-typography/
//

@function strip-unit($value) {
  @return calc(#{$value} / (#{$value} * 0 + 1));
}

@mixin fluid-type(
  $min-vw,
  $max-vw,
  $min-font-size,
  $max-font-size
) {
  $u1: math.unit($min-vw);
  $u2: math.unit($max-vw);
  $u3: math.unit($min-font-size);
  $u4: math.unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

@mixin scrollbar-v {
  &::-webkit-scrollbar {
    width: .4em;
  }

  &::-webkit-scrollbar-track {
    $i: rgba(v.$dark, .5);

    background-color: $i;
    border: 0;
    outline: 0;
    box-shadow: 0 0 0 4px $i;
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--color-pink);
    border-radius: .2em;
  }
}

@mixin scrollbar-h {
  &::-webkit-scrollbar {
    height: .4em;
  }

  &::-webkit-scrollbar-track {
    $i: rgba(v.$dark, .5);

    background-color: $i;
    border: 0;
    outline: 0;
    box-shadow: 0 0 0 4px $i;
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--color-pink);
    border-radius: .2em;
  }
}
